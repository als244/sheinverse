{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Documents/toyProjects/metaverse/client_app/sheinverse/src/components/WalletInspector.js\",\n    _s = $RefreshSig$();\n\nimport { useWallet, useConnection } from '@solana/wallet-adapter-react';\nimport { WalletNotConnectedError } from '@solana/wallet-adapter-base';\nimport React, { useCallback } from 'react';\nimport { TOKEN_PROGRAM_ID, Token, AccountLayout, u64 } from \"@solana/spl-token\";\nimport { Commitment, clusterApiUrl, Keypair, PublicKey, SystemProgram, TokenAccountsFilter } from '@solana/web3.js';\nimport TokenCount from './TokenCount';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MINT_ADD = \"6rbtgebh89nx2vd9EbzcTMhQS8pKUG9ggoGEijuMFUbC\";\nexport const WalletInspector = _ref => {\n  _s();\n\n  let {\n    onClick\n  } = _ref;\n  const {\n    connection\n  } = useConnection();\n  const {\n    publicKey\n  } = useWallet();\n\n  if (!publicKey) {\n    return /*#__PURE__*/_jsxDEV(TokenCount, {\n      count: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n\n  const tokens = connection.getParsedTokenAccountsByOwner(publicKey, {\n    programId: TOKEN_PROGRAM_ID\n  });\n  const my_count = 1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    classname: \"portal\",\n    children: [/*#__PURE__*/_jsxDEV(TokenCount, {\n      count: my_count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Enter Portal...\",\n      color: \"Green\",\n      onClick: onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PortalImage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WalletInspector, \"hd/vBS8IeyQWqhRyAqTBy/N4LDM=\", false, function () {\n  return [useConnection, useWallet];\n});\n\n_c = WalletInspector;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletInspector\");","map":{"version":3,"sources":["/Users/andrew/Documents/toyProjects/metaverse/client_app/sheinverse/src/components/WalletInspector.js"],"names":["useWallet","useConnection","WalletNotConnectedError","React","useCallback","TOKEN_PROGRAM_ID","Token","AccountLayout","u64","Commitment","clusterApiUrl","Keypair","PublicKey","SystemProgram","TokenAccountsFilter","TokenCount","MINT_ADD","WalletInspector","onClick","connection","publicKey","tokens","getParsedTokenAccountsByOwner","programId","my_count"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,aAApB,QAAwC,8BAAxC;AACA,SAAQC,uBAAR,QAAsC,6BAAtC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAkC,OAAlC;AACA,SAASC,gBAAT,EAA2BC,KAA3B,EAAkCC,aAAlC,EAAiDC,GAAjD,QAA2D,mBAA3D;AACA,SAAQC,UAAR,EAAoBC,aAApB,EAAmCC,OAAnC,EAA4CC,SAA5C,EAAuDC,aAAvD,EAAsEC,mBAAtE,QAAgG,iBAAhG;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,QAAQ,GAAG,8CAAjB;AAEA,OAAO,MAAMC,eAAe,GAAG,QAAe;AAAA;;AAAA,MAAd;AAACC,IAAAA;AAAD,GAAc;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAiBlB,aAAa,EAApC;AACA,QAAM;AAAEmB,IAAAA;AAAF,MAAgBpB,SAAS,EAA/B;;AAEA,MAAI,CAACoB,SAAL,EAAe;AACX,wBACI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAAnB;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAED,QAAMC,MAAM,GAAGF,UAAU,CAACG,6BAAX,CAAyCF,SAAzC,EAAoD;AAACG,IAAAA,SAAS,EAAElB;AAAZ,GAApD,CAAf;AACA,QAAMmB,QAAQ,GAAG,CAAjB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,iBAAb;AAA+B,MAAA,KAAK,EAAC,OAArC;AAA6C,MAAA,OAAO,EAAEN;AAAtD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CArBM;;GAAMD,e;UACchB,a,EACDD,S;;;KAFbiB,e","sourcesContent":["import { useWallet, useConnection} from '@solana/wallet-adapter-react';\nimport {WalletNotConnectedError} from '@solana/wallet-adapter-base';\nimport React, { useCallback} from 'react';\nimport { TOKEN_PROGRAM_ID, Token, AccountLayout, u64} from \"@solana/spl-token\";\nimport {Commitment, clusterApiUrl, Keypair, PublicKey, SystemProgram, TokenAccountsFilter} from '@solana/web3.js';\nimport TokenCount from './TokenCount';\n\nconst MINT_ADD = \"6rbtgebh89nx2vd9EbzcTMhQS8pKUG9ggoGEijuMFUbC\";\n\nexport const WalletInspector = ({onClick}) => {\n    const { connection } = useConnection();\n    const { publicKey } = useWallet();\n\n    if (!publicKey){\n        return (\n            <TokenCount count={0} />\n        )\n    }\n\n    const tokens = connection.getParsedTokenAccountsByOwner(publicKey, {programId: TOKEN_PROGRAM_ID});\n    const my_count = 1;\n\n    return (\n        <div classname=\"portal\">\n            <TokenCount count={my_count}/>\n            <Button text=\"Enter Portal...\" color=\"Green\" onClick={onClick}/>\n            <PortalImage />\n        </div>\n        \n    );\n};"]},"metadata":{},"sourceType":"module"}