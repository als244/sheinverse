{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Documents/toyProjects/metaverse/client_app/sheinverse/src/components/WalletInspector.js\",\n    _s = $RefreshSig$();\n\nimport { useWallet, useConnection } from '@solana/wallet-adapter-react';\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport TokenCount from './TokenCount';\nimport Button from './Button';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MINT_ADD = \"6rbtgebh89nx2vd9EbzcTMhQS8pKUG9ggoGEijuMFUbC\";\nexport const WalletInspector = () => {\n  _s();\n\n  let location = useLocation();\n  const {\n    connection\n  } = useConnection();\n  const {\n    wallet,\n    publicKey\n  } = useWallet();\n  const [balance, setBalance] = useState(0);\n  useEffect(() => {\n    if (wallet && publicKey) {\n      fetchBalance();\n    }\n  }, [wallet, publicKey]);\n\n  const fetchBalance = async () => {\n    const tokens = await connection.getParsedTokenAccountsByOwner(publicKey, {\n      programId: TOKEN_PROGRAM_ID\n    });\n    let shein_token = tokens.value.find(t => t.account.data.parsed.info.mint === MINT_ADD);\n    let my_balance = shein_token ? shein_token.account.data.parsed.info.tokenAmount.uiAmount : 0;\n    setBalance(my_balance);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: publicKey && balance > 0 && location.pathname == \"/\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TokenCount, {\n        count: balance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/destination\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Enter Portal...\",\n          color: \"Green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 49\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WalletInspector, \"FpyNbPQpg2Lg8gtgmhe01cJs8Qg=\", false, function () {\n  return [useLocation, useConnection, useWallet];\n});\n\n_c = WalletInspector;\nexport default WalletInspector;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletInspector\");","map":{"version":3,"sources":["/Users/andrew/Documents/toyProjects/metaverse/client_app/sheinverse/src/components/WalletInspector.js"],"names":["useWallet","useConnection","TOKEN_PROGRAM_ID","TokenCount","Button","Link","useLocation","useState","useEffect","MINT_ADD","WalletInspector","location","connection","wallet","publicKey","balance","setBalance","fetchBalance","tokens","getParsedTokenAccountsByOwner","programId","shein_token","value","find","t","account","data","parsed","info","mint","my_balance","tokenAmount","uiAmount","textAlign","pathname"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,aAApB,QAAwC,8BAAxC;AACA,SAASC,gBAAT,QAAgC,mBAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,IAAR,EAAcC,WAAd,QAAiC,kBAAjC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,QAAQ,GAAG,8CAAjB;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AAAA;;AACjC,MAAIC,QAAQ,GAAGL,WAAW,EAA1B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAiBX,aAAa,EAApC;AACA,QAAM;AAAEY,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAwBd,SAAS,EAAvC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,CAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,MAAM,IAAIC,SAAd,EAAwB;AACpBG,MAAAA,YAAY;AACf;AACJ,GAJQ,EAIN,CAACJ,MAAD,EAASC,SAAT,CAJM,CAAT;;AAMA,QAAMG,YAAY,GAAG,YAAY;AAC7B,UAAMC,MAAM,GAAG,MAAMN,UAAU,CAACO,6BAAX,CAAyCL,SAAzC,EAAoD;AAACM,MAAAA,SAAS,EAAElB;AAAZ,KAApD,CAArB;AACA,QAAImB,WAAW,GAAGH,MAAM,CAACI,KAAP,CAAaC,IAAb,CAAkBC,CAAC,IAAIA,CAAC,CAACC,OAAF,CAAUC,IAAV,CAAeC,MAAf,CAAsBC,IAAtB,CAA2BC,IAA3B,KAAoCpB,QAA3D,CAAlB;AACA,QAAIqB,UAAU,GAAGT,WAAW,GAAGA,WAAW,CAACI,OAAZ,CAAoBC,IAApB,CAAyBC,MAAzB,CAAgCC,IAAhC,CAAqCG,WAArC,CAAiDC,QAApD,GAA8D,CAA1F;AACAhB,IAAAA,UAAU,CAACc,UAAD,CAAV;AACH,GALD;;AAOA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACG,MAAAA,SAAS,EAAE;AAAZ,KAAZ;AAAA,cACKnB,SAAS,IAAIC,OAAO,GAAG,CAAvB,IAA4BJ,QAAQ,CAACuB,QAAT,IAAmB,GAA/C,iBACG;AAAA,8BAAE,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEnB;AAAnB;AAAA;AAAA;AAAA;AAAA,cAAF,eAAgC,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,cAAT;AAAA,+BAC5B,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,iBAAb;AAA+B,UAAA,KAAK,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA;AAD4B;AAAA;AAAA;AAAA;AAAA,cAAhC;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA7BM;;GAAML,e;UACMJ,W,EACQL,a,EACOD,S;;;KAHrBU,e;AA+Bb,eAAeA,eAAf","sourcesContent":["import { useWallet, useConnection} from '@solana/wallet-adapter-react';\nimport { TOKEN_PROGRAM_ID} from \"@solana/spl-token\";\nimport TokenCount from './TokenCount';\nimport Button from './Button';\nimport {Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react'\n\nconst MINT_ADD = \"6rbtgebh89nx2vd9EbzcTMhQS8pKUG9ggoGEijuMFUbC\";\n\nexport const WalletInspector = () => {\n    let location = useLocation();\n    const { connection } = useConnection();\n    const { wallet, publicKey } = useWallet();\n    const [balance, setBalance] = useState(0);\n\n    useEffect(() => {\n        if (wallet && publicKey){\n            fetchBalance();\n        }\n    }, [wallet, publicKey]);\n\n    const fetchBalance = async () => {\n        const tokens = await connection.getParsedTokenAccountsByOwner(publicKey, {programId: TOKEN_PROGRAM_ID});\n        let shein_token = tokens.value.find(t => t.account.data.parsed.info.mint === MINT_ADD);\n        let my_balance = shein_token ? shein_token.account.data.parsed.info.tokenAmount.uiAmount: 0;\n        setBalance(my_balance);\n    }\n\n    return (\n        <div style={{textAlign: \"center\"}}>\n            {publicKey && balance > 0 && location.pathname==\"/\" &&\n                <><TokenCount count={balance} /><Link to='/destination'>\n                    <Button text=\"Enter Portal...\" color=\"Green\" />\n                </Link></>\n            }\n        </div>\n        \n    );\n};\n\nexport default WalletInspector;"]},"metadata":{},"sourceType":"module"}