{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Documents/toyProjects/metaverse/client_app/sheinverse/src/components/Wallet.js\",\n    _s = $RefreshSig$();\n\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';\nimport { WalletModalProvider } from '@solana/wallet-adapter-react-ui';\nimport { getLedgerWallet, getPhantomWallet, getSolflareWallet } from '@solana/wallet-adapter-wallets';\nimport { clusterApiUrl } from '@solana/web3.js';\nimport React, { useCallback, useMemo } from 'react';\nimport { Toaster } from 'react-hot-toast';\nimport { Navigation } from './Navigation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Wallet = () => {\n  _s();\n\n  const network = WalletAdapterNetwork.Mainnet;\n  const endpoint = useMemo(() => clusterApiUrl(network), [network]); // @solana/wallet-adapter-wallets imports all the adapters but supports tree shaking --\n  // Only the wallets you want to support will be compiled into your application\n\n  const wallets = useMemo(() => [getPhantomWallet(), getSolflareWallet(), getLedgerWallet()], [network]);\n  const onError = useCallback(error => console.log(error));\n  return /*#__PURE__*/_jsxDEV(ConnectionProvider, {\n    endpoint: endpoint,\n    children: /*#__PURE__*/_jsxDEV(WalletProvider, {\n      wallets: wallets,\n      onError: onError,\n      autoConnect: true,\n      children: [/*#__PURE__*/_jsxDEV(WalletModalProvider, {\n        children: /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Toaster, {\n        position: \"bottom-left\",\n        reverseOrder: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Wallet, \"d0lP12HGMx9seVZpfPNa1u9wI+8=\");\n\n_c = Wallet;\nexport default Wallet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"sources":["/Users/andrew/Documents/toyProjects/metaverse/client_app/sheinverse/src/components/Wallet.js"],"names":["WalletAdapterNetwork","ConnectionProvider","WalletProvider","WalletModalProvider","getLedgerWallet","getPhantomWallet","getSolflareWallet","clusterApiUrl","React","useCallback","useMemo","Toaster","Navigation","Wallet","network","Mainnet","endpoint","wallets","onError","error","console","log"],"mappings":";;;AAAA,SAASA,oBAAT,QAAqC,6BAArC;AACA,SAASC,kBAAT,EAA6BC,cAA7B,QAAmD,8BAAnD;AACA,SAASC,mBAAT,QAAoC,iCAApC;AACA,SACIC,eADJ,EAEIC,gBAFJ,EAGIC,iBAHJ,QAIO,gCAJP;AAKA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,QAA4C,OAA5C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACxB,QAAMC,OAAO,GAAGd,oBAAoB,CAACe,OAArC;AACA,QAAMC,QAAQ,GAAGN,OAAO,CAAC,MAAMH,aAAa,CAACO,OAAD,CAApB,EAA+B,CAACA,OAAD,CAA/B,CAAxB,CAFwB,CAIxB;AACA;;AACA,QAAMG,OAAO,GAAGP,OAAO,CACnB,MAAM,CACFL,gBAAgB,EADd,EAEFC,iBAAiB,EAFf,EAGFF,eAAe,EAHb,CADa,EAMnB,CAACU,OAAD,CANmB,CAAvB;AASA,QAAMI,OAAO,GAAGT,WAAW,CACtBU,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CADY,CAA3B;AAIA,sBACI,QAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEH,QAA9B;AAAA,2BACI,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEC,OAAzB;AAAkC,MAAA,OAAO,EAAEC,OAA3C;AAAoD,MAAA,WAAW,MAA/D;AAAA,8BACI,QAAC,mBAAD;AAAA,+BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,OAAD;AAAS,QAAA,QAAQ,EAAC,aAAlB;AAAgC,QAAA,YAAY,EAAE;AAA9C;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA7BM;;GAAML,M;;KAAAA,M;AA+Bb,eAAeA,MAAf","sourcesContent":["import { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';\nimport { WalletModalProvider } from '@solana/wallet-adapter-react-ui';\nimport {\n    getLedgerWallet,\n    getPhantomWallet,\n    getSolflareWallet,\n} from '@solana/wallet-adapter-wallets';\nimport { clusterApiUrl } from '@solana/web3.js';\nimport React, { useCallback, useMemo } from 'react';\nimport { Toaster } from 'react-hot-toast';\nimport { Navigation } from './Navigation';\n\nexport const Wallet = () => {\n    const network = WalletAdapterNetwork.Mainnet;\n    const endpoint = useMemo(() => clusterApiUrl(network), [network]);\n\n    // @solana/wallet-adapter-wallets imports all the adapters but supports tree shaking --\n    // Only the wallets you want to support will be compiled into your application\n    const wallets = useMemo(\n        () => [\n            getPhantomWallet(),\n            getSolflareWallet(),\n            getLedgerWallet(),\n        ],\n        [network]\n    );\n\n    const onError = useCallback(\n        (error) => console.log(error)\n    );\n\n    return (\n        <ConnectionProvider endpoint={endpoint}>\n            <WalletProvider wallets={wallets} onError={onError} autoConnect>\n                <WalletModalProvider>\n                    <Navigation />\n                </WalletModalProvider>\n                <Toaster position=\"bottom-left\" reverseOrder={false} />\n            </WalletProvider>\n        </ConnectionProvider>\n    );\n};\n\nexport default Wallet"]},"metadata":{},"sourceType":"module"}