{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Documents/toyProjects/metaverse/client_app/sheinverse/src/components/WalletInspector.js\",\n    _s = $RefreshSig$();\n\nimport { useWallet, useConnection } from '@solana/wallet-adapter-react';\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport TokenCount from './TokenCount';\nimport Button from './Button';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MINT_ADD = \"6rbtgebh89nx2vd9EbzcTMhQS8pKUG9ggoGEijuMFUbC\";\nexport const WalletInspector = _ref => {\n  _s();\n\n  let {\n    onClick\n  } = _ref;\n  const {\n    connection\n  } = useConnection();\n  const {\n    publicKey\n  } = useWallet();\n  var my_count = 0;\n\n  async function fetchTokens() {\n    const tokens = await connection.getParsedTokenAccountsByOwner(publicKey, {\n      programId: TOKEN_PROGRAM_ID\n    });\n    processTokens(tokens);\n  }\n\n  function processTokens(tokens) {\n    let shein_token = tokens.find(t => t.account.data.parsed.info.mint === MINT_ADD);\n    my_count = shein_token ? shein_token.account.data.parsed.info.tokenAmount.uiAmount : 0;\n  }\n\n  if (publicKey) {\n    fetchTokens();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: publicKey && this.my_count > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TokenCount, {\n        count: this.my_count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/destination\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Enter Portal...\",\n          color: \"Green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 55\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WalletInspector, \"hd/vBS8IeyQWqhRyAqTBy/N4LDM=\", false, function () {\n  return [useConnection, useWallet];\n});\n\n_c = WalletInspector;\nexport default WalletInspector;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletInspector\");","map":{"version":3,"sources":["/Users/andrew/Documents/toyProjects/metaverse/client_app/sheinverse/src/components/WalletInspector.js"],"names":["useWallet","useConnection","TOKEN_PROGRAM_ID","TokenCount","Button","Link","MINT_ADD","WalletInspector","onClick","connection","publicKey","my_count","fetchTokens","tokens","getParsedTokenAccountsByOwner","programId","processTokens","shein_token","find","t","account","data","parsed","info","mint","tokenAmount","uiAmount","textAlign"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,aAApB,QAAwC,8BAAxC;AACA,SAASC,gBAAT,QAAgC,mBAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;;AAEA,MAAMC,QAAQ,GAAG,8CAAjB;AAEA,OAAO,MAAMC,eAAe,GAAG,QAAe;AAAA;;AAAA,MAAd;AAACC,IAAAA;AAAD,GAAc;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAiBR,aAAa,EAApC;AACA,QAAM;AAAES,IAAAA;AAAF,MAAgBV,SAAS,EAA/B;AACA,MAAIW,QAAQ,GAAG,CAAf;;AAEA,iBAAeC,WAAf,GAA4B;AACxB,UAAMC,MAAM,GAAG,MAAMJ,UAAU,CAACK,6BAAX,CAAyCJ,SAAzC,EAAoD;AAACK,MAAAA,SAAS,EAAEb;AAAZ,KAApD,CAArB;AACAc,IAAAA,aAAa,CAACH,MAAD,CAAb;AACH;;AAED,WAASG,aAAT,CAAuBH,MAAvB,EAA+B;AAC3B,QAAII,WAAW,GAAGJ,MAAM,CAACK,IAAP,CAAYC,CAAC,IAAIA,CAAC,CAACC,OAAF,CAAUC,IAAV,CAAeC,MAAf,CAAsBC,IAAtB,CAA2BC,IAA3B,KAAoClB,QAArD,CAAlB;AACAK,IAAAA,QAAQ,GAAGM,WAAW,GAAGA,WAAW,CAACG,OAAZ,CAAoBC,IAApB,CAAyBC,MAAzB,CAAgCC,IAAhC,CAAqCE,WAArC,CAAiDC,QAApD,GAA8D,CAApF;AACH;;AAED,MAAIhB,SAAJ,EAAc;AACXE,IAAAA,WAAW;AACb;;AAED,sBACI;AAAK,IAAA,KAAK,EAAE;AAACe,MAAAA,SAAS,EAAE;AAAZ,KAAZ;AAAA,cACKjB,SAAS,IAAI,KAAKC,QAAL,GAAgB,CAA7B,iBACG;AAAA,8BAAE,QAAC,UAAD;AAAY,QAAA,KAAK,EAAE,KAAKA;AAAxB;AAAA;AAAA;AAAA;AAAA,cAAF,eAAsC,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,cAAT;AAAA,+BAClC,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,iBAAb;AAA+B,UAAA,KAAK,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA;AADkC;AAAA;AAAA;AAAA;AAAA,cAAtC;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA7BM;;GAAMJ,e;UACcN,a,EACDD,S;;;KAFbO,e;AA+Bb,eAAeA,eAAf","sourcesContent":["import { useWallet, useConnection} from '@solana/wallet-adapter-react';\nimport { TOKEN_PROGRAM_ID} from \"@solana/spl-token\";\nimport TokenCount from './TokenCount';\nimport Button from './Button';\nimport {Link} from 'react-router-dom';\n\nconst MINT_ADD = \"6rbtgebh89nx2vd9EbzcTMhQS8pKUG9ggoGEijuMFUbC\";\n\nexport const WalletInspector = ({onClick}) => {\n    const { connection } = useConnection();\n    const { publicKey } = useWallet();\n    var my_count = 0;\n\n    async function fetchTokens(){\n        const tokens = await connection.getParsedTokenAccountsByOwner(publicKey, {programId: TOKEN_PROGRAM_ID});\n        processTokens(tokens);\n    }\n\n    function processTokens(tokens) {\n        let shein_token = tokens.find(t => t.account.data.parsed.info.mint === MINT_ADD);\n        my_count = shein_token ? shein_token.account.data.parsed.info.tokenAmount.uiAmount: 0;\n    }\n\n    if (publicKey){\n       fetchTokens();\n    }\n  \n    return (\n        <div style={{textAlign: \"center\"}}>\n            {publicKey && this.my_count > 0 &&\n                <><TokenCount count={this.my_count} /><Link to='/destination'>\n                    <Button text=\"Enter Portal...\" color=\"Green\" />\n                </Link></>\n            }\n        </div>\n        \n    );\n};\n\nexport default WalletInspector;"]},"metadata":{},"sourceType":"module"}