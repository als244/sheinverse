{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Documents/toyProjects/metaverse/client_app/sheinverse/src/components/WalletInspector.js\",\n    _s = $RefreshSig$();\n\nimport { useWallet, useConnection } from '@solana/wallet-adapter-react';\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport TokenCount from './TokenCount';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MINT_ADD = \"6rbtgebh89nx2vd9EbzcTMhQS8pKUG9ggoGEijuMFUbC\";\nexport const WalletInspector = () => {\n  _s();\n\n  const {\n    connection\n  } = useConnection();\n  const {\n    publicKey\n  } = useWallet();\n\n  if (!publicKey) {\n    return /*#__PURE__*/_jsxDEV(TokenCount, {\n      count: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n\n  const tokens = connection.getParsedTokenAccountsByOwner(publicKey, {\n    programId: TOKEN_PROGRAM_ID\n  });\n  const my_count = 1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    classname: \"portal\",\n    children: /*#__PURE__*/_jsxDEV(TokenCount, {\n      count: my_count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WalletInspector, \"hd/vBS8IeyQWqhRyAqTBy/N4LDM=\", false, function () {\n  return [useConnection, useWallet];\n});\n\n_c = WalletInspector;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletInspector\");","map":{"version":3,"sources":["/Users/andrew/Documents/toyProjects/metaverse/client_app/sheinverse/src/components/WalletInspector.js"],"names":["useWallet","useConnection","TOKEN_PROGRAM_ID","TokenCount","MINT_ADD","WalletInspector","connection","publicKey","tokens","getParsedTokenAccountsByOwner","programId","my_count"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,aAApB,QAAwC,8BAAxC;AACA,SAASC,gBAAT,QAAgC,mBAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,QAAQ,GAAG,8CAAjB;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AAAA;;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAiBL,aAAa,EAApC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAgBP,SAAS,EAA/B;;AAEA,MAAI,CAACO,SAAL,EAAe;AACX,wBACI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAAnB;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAED,QAAMC,MAAM,GAAGF,UAAU,CAACG,6BAAX,CAAyCF,SAAzC,EAAoD;AAACG,IAAAA,SAAS,EAAER;AAAZ,GAApD,CAAf;AACA,QAAMS,QAAQ,GAAG,CAAjB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAnBM;;GAAMN,e;UACcJ,a,EACDD,S;;;KAFbK,e","sourcesContent":["import { useWallet, useConnection} from '@solana/wallet-adapter-react';\nimport { TOKEN_PROGRAM_ID} from \"@solana/spl-token\";\nimport TokenCount from './TokenCount';\n\nconst MINT_ADD = \"6rbtgebh89nx2vd9EbzcTMhQS8pKUG9ggoGEijuMFUbC\";\n\nexport const WalletInspector = () => {\n    const { connection } = useConnection();\n    const { publicKey } = useWallet();\n\n    if (!publicKey){\n        return (\n            <TokenCount count={0} />\n        )\n    }\n\n    const tokens = connection.getParsedTokenAccountsByOwner(publicKey, {programId: TOKEN_PROGRAM_ID});\n    const my_count = 1;\n\n    return (\n        <div classname=\"portal\">\n            <TokenCount count={my_count}/>\n        </div>\n        \n    );\n};"]},"metadata":{},"sourceType":"module"}