{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Documents/toyProjects/metaverse/client_app/sheinverse/src/components/WalletInspector.js\",\n    _s = $RefreshSig$();\n\nimport { useWallet, useConnection } from '@solana/wallet-adapter-react';\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport TokenCount from './TokenCount';\nimport Button from './Button';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MINT_ADD = \"6rbtgebh89nx2vd9EbzcTMhQS8pKUG9ggoGEijuMFUbC\";\nexport const WalletInspector = _ref => {\n  _s();\n\n  let {\n    onClick\n  } = _ref;\n  const {\n    connection\n  } = useConnection();\n  const {\n    publicKey\n  } = useWallet();\n  let my_count = 0;\n\n  if (publicKey) {\n    const tokens = connection.getParsedTokenAccountsByOwner(publicKey, {\n      programId: TOKEN_PROGRAM_ID\n    });\n    console.log(tokens);\n    my_count = 1;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: publicKey && my_count > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TokenCount, {\n        count: my_count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/destination\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Enter Portal...\",\n          color: \"Green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WalletInspector, \"hd/vBS8IeyQWqhRyAqTBy/N4LDM=\", false, function () {\n  return [useConnection, useWallet];\n});\n\n_c = WalletInspector;\nexport default WalletInspector;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletInspector\");","map":{"version":3,"sources":["/Users/andrew/Documents/toyProjects/metaverse/client_app/sheinverse/src/components/WalletInspector.js"],"names":["useWallet","useConnection","TOKEN_PROGRAM_ID","TokenCount","Button","Link","MINT_ADD","WalletInspector","onClick","connection","publicKey","my_count","tokens","getParsedTokenAccountsByOwner","programId","console","log","textAlign"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,aAApB,QAAwC,8BAAxC;AACA,SAASC,gBAAT,QAAgC,mBAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;;AAEA,MAAMC,QAAQ,GAAG,8CAAjB;AAEA,OAAO,MAAMC,eAAe,GAAG,QAAe;AAAA;;AAAA,MAAd;AAACC,IAAAA;AAAD,GAAc;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAiBR,aAAa,EAApC;AACA,QAAM;AAAES,IAAAA;AAAF,MAAgBV,SAAS,EAA/B;AACA,MAAIW,QAAQ,GAAG,CAAf;;AAEA,MAAID,SAAJ,EAAc;AACV,UAAME,MAAM,GAAGH,UAAU,CAACI,6BAAX,CAAyCH,SAAzC,EAAoD;AAACI,MAAAA,SAAS,EAAEZ;AAAZ,KAApD,CAAf;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACAD,IAAAA,QAAQ,GAAG,CAAX;AACH;;AAED,sBACI;AAAK,IAAA,KAAK,EAAE;AAACM,MAAAA,SAAS,EAAE;AAAZ,KAAZ;AAAA,cACKP,SAAS,IAAIC,QAAQ,GAAG,CAAxB,iBACG;AAAA,8BAAE,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,cAAF,eAAiC,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,cAAT;AAAA,+BAC7B,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,iBAAb;AAA+B,UAAA,KAAK,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA;AAD6B;AAAA;AAAA;AAAA;AAAA,cAAjC;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CArBM;;GAAMJ,e;UACcN,a,EACDD,S;;;KAFbO,e;AAuBb,eAAeA,eAAf","sourcesContent":["import { useWallet, useConnection} from '@solana/wallet-adapter-react';\nimport { TOKEN_PROGRAM_ID} from \"@solana/spl-token\";\nimport TokenCount from './TokenCount';\nimport Button from './Button';\nimport {Link} from 'react-router-dom';\n\nconst MINT_ADD = \"6rbtgebh89nx2vd9EbzcTMhQS8pKUG9ggoGEijuMFUbC\";\n\nexport const WalletInspector = ({onClick}) => {\n    const { connection } = useConnection();\n    const { publicKey } = useWallet();\n    let my_count = 0;\n\n    if (publicKey){\n        const tokens = connection.getParsedTokenAccountsByOwner(publicKey, {programId: TOKEN_PROGRAM_ID});\n        console.log(tokens);\n        my_count = 1;\n    }\n\n    return (\n        <div style={{textAlign: \"center\"}}>\n            {publicKey && my_count > 0 &&\n                <><TokenCount count={my_count} /><Link to='/destination'>\n                    <Button text=\"Enter Portal...\" color=\"Green\" />\n                </Link></>\n            }\n        </div>\n        \n    );\n};\n\nexport default WalletInspector;"]},"metadata":{},"sourceType":"module"}